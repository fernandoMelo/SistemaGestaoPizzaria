/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.gestao.pizzaria.apresentacao;

import br.com.gestao.pizzaria.entidade.Bebida;
import br.com.gestao.pizzaria.entidade.Cliente;
import br.com.gestao.pizzaria.entidade.Pedido;
import br.com.gestao.pizzaria.entidade.Pizza;
import br.com.gestao.pizzaria.negocio.BebidaBO;
import br.com.gestao.pizzaria.negocio.ClienteBO;
import br.com.gestao.pizzaria.negocio.PizzaBO;
import static java.lang.Double.parseDouble;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author melot_000
 */
public class CadastrarPedidoForm extends javax.swing.JFrame {

    private PesquisarPedidoForm pesquisarPedidoForm;
    private Pedido pedido;

    private Cliente cliente = new Cliente();
    private List<Cliente> clientes = new ArrayList<>();

    private Bebida bebida = new Bebida();
    private List<Bebida> bebidas = new ArrayList<>();

    private Pizza pizza = new Pizza();
    private List<Pizza> pizzas = new ArrayList<>();

    private List listaPedidos = new ArrayList();

    /**
     * Creates new form CadastrarUsuario
     */
    public CadastrarPedidoForm() {
        this.prepararTela();
    }

    private void prepararTela() {
        this.initComponents();
        this.desabilitarAdicionarItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpTipoPedido = new javax.swing.ButtonGroup();
        grpAdicionarItem = new javax.swing.ButtonGroup();
        pnlCadastroDePedido = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        lblTipoPedido = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGenerica = new javax.swing.JTable();
        rdoMesa = new javax.swing.JRadioButton();
        rdoBalcao = new javax.swing.JRadioButton();
        rdoDelivery = new javax.swing.JRadioButton();
        lblTipoItem = new javax.swing.JLabel();
        rdoBebida = new javax.swing.JRadioButton();
        rdoPizza = new javax.swing.JRadioButton();
        txtTipoPedido = new javax.swing.JTextField();
        lblAcaoTipoPedido = new javax.swing.JLabel();
        lblIr = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItensAdicionados = new javax.swing.JTable();
        lblItensAdicionados = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        btnADD = new javax.swing.JButton();
        spnQuantidade = new javax.swing.JSpinner();
        btnRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Pedido");
        setExtendedState(6);

        pnlCadastroDePedido.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Pedidos", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gestao/pizzaria/icones/diskette18.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gestao/pizzaria/icones/clear5.png"))); // NOI18N
        btnFechar.setText("FECHAR");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        lblTipoPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTipoPedido.setText("Tipo pedido");

        tblGenerica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblGenerica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGenericaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGenerica);

        grpTipoPedido.add(rdoMesa);
        rdoMesa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoMesa.setText("Mesa");
        rdoMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoMesaActionPerformed(evt);
            }
        });

        grpTipoPedido.add(rdoBalcao);
        rdoBalcao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoBalcao.setText("Balc√£o");
        rdoBalcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoBalcaoActionPerformed(evt);
            }
        });

        grpTipoPedido.add(rdoDelivery);
        rdoDelivery.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoDelivery.setText("Delivery");
        rdoDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDeliveryActionPerformed(evt);
            }
        });

        lblTipoItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTipoItem.setText("Adicionar Item:");

        grpAdicionarItem.add(rdoBebida);
        rdoBebida.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoBebida.setText("Bebida");
        rdoBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoBebidaActionPerformed(evt);
            }
        });

        grpAdicionarItem.add(rdoPizza);
        rdoPizza.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoPizza.setText("Pizza");
        rdoPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoPizzaActionPerformed(evt);
            }
        });

        txtTipoPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTipoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoPedidoActionPerformed(evt);
            }
        });

        lblAcaoTipoPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblIr.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblIr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblIr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblIrMouseClicked(evt);
            }
        });

        tblItensAdicionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblItensAdicionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItensAdicionadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblItensAdicionados);

        lblItensAdicionados.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblItensAdicionados.setText("Itens Adicionados");

        lblQuantidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblQuantidade.setText("Quantidade:");

        btnADD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gestao/pizzaria/icones/add204.png"))); // NOI18N
        btnADD.setText("ADD");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        spnQuantidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spnQuantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gestao/pizzaria/icones/garbage12.png"))); // NOI18N
        btnRemover.setText("REMOVER ITEM");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCadastroDePedidoLayout = new javax.swing.GroupLayout(pnlCadastroDePedido);
        pnlCadastroDePedido.setLayout(pnlCadastroDePedidoLayout);
        pnlCadastroDePedidoLayout.setHorizontalGroup(
            pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                        .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTipoPedido)
                                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                                        .addComponent(rdoMesa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdoBalcao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdoDelivery))
                                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                                        .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lblAcaoTipoPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtTipoPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblIr, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblTipoItem))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                        .addComponent(rdoBebida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoPizza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblItensAdicionados)
                        .addGap(223, 223, 223))
                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                        .addGap(564, 564, 564)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                        .addComponent(lblQuantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnADD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(243, 243, 243))))
        );
        pnlCadastroDePedidoLayout.setVerticalGroup(
            pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroDePedidoLayout.createSequentialGroup()
                .addComponent(lblTipoPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoMesa)
                    .addComponent(rdoBalcao)
                    .addComponent(rdoDelivery))
                .addGap(14, 14, 14)
                .addComponent(lblAcaoTipoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblIr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTipoPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(lblTipoItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoBebida)
                    .addComponent(rdoPizza)
                    .addComponent(lblItensAdicionados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantidade)
                            .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlCadastroDePedidoLayout.createSequentialGroup()
                        .addGap(28, 119, Short.MAX_VALUE)
                        .addGroup(pnlCadastroDePedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCadastroDePedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlCadastroDePedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlCadastroDePedido.getAccessibleContext().setAccessibleName("Cadastro de pedidos");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.fecharCadastroCliente();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtTipoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoPedidoActionPerformed

    private void rdoBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoBebidaActionPerformed
        this.buscarBebida();
    }//GEN-LAST:event_rdoBebidaActionPerformed

    private void rdoMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoMesaActionPerformed
        lblAcaoTipoPedido.setText("N√∫mero da Mesa:");
        lblIr.setText("");
        txtTipoPedido.setText("");
        this.habilitarAdicionarItem();
    }//GEN-LAST:event_rdoMesaActionPerformed

    private void rdoBalcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoBalcaoActionPerformed
        lblAcaoTipoPedido.setText("Nome do cliente: ");
        lblIr.setText("");
        this.habilitarAdicionarItem();
    }//GEN-LAST:event_rdoBalcaoActionPerformed

    private void rdoDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDeliveryActionPerformed
        lblAcaoTipoPedido.setText("Pesquisar nome do cliente: ");
        lblIr.setText("IR");
        this.habilitarAdicionarItem();
    }//GEN-LAST:event_rdoDeliveryActionPerformed

    private void lblIrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIrMouseClicked
        this.pesquisarCliente();
    }//GEN-LAST:event_lblIrMouseClicked

    private void rdoPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoPizzaActionPerformed
        this.buscarPizza();
    }//GEN-LAST:event_rdoPizzaActionPerformed

    private void tblItensAdicionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItensAdicionadosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblItensAdicionadosMouseClicked

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        this.adicionarItemTabela();
    }//GEN-LAST:event_btnADDActionPerformed

    private void tblGenericaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGenericaMouseClicked
        if (rdoDelivery.isSelected()) {

            cliente = clientes.get(tblGenerica.getSelectedRow());
            txtTipoPedido.setText(cliente.getNome());
            lblIr.setText("");
            lblAcaoTipoPedido.setText("Nome do Cliente: ");
        }
    }//GEN-LAST:event_tblGenericaMouseClicked

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        this.removerItem();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void removerItem() {
        int linhaSelecionada = tblItensAdicionados.getSelectedRow();

        if (rdoBalcao.isSelected() || rdoMesa.isSelected() || rdoDelivery.isSelected()) {

            if (linhaSelecionada > -1) {

                listaPedidos.remove(linhaSelecionada);
                this.carregarTabelaItensPedidos();

            } else {
                String mensagem = "Nenhum item selecionado.";
                JOptionPane.showMessageDialog(this, mensagem, "Remover item",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            String mensagem = "Selecione o tipo do pedido.";
            JOptionPane.showMessageDialog(this, mensagem, "Tipo do pedido",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void desabilitarAdicionarItem() {
        rdoBebida.setEnabled(false);
        rdoPizza.setEnabled(false);
    }

    private void habilitarAdicionarItem() {
        rdoBebida.setEnabled(true);
        rdoPizza.setEnabled(true);
    }

    @SuppressWarnings("unchecked")
    private void adicionarItemTabela() {

        int linhaSelecionada = tblGenerica.getSelectedRow();

        if (rdoBalcao.isSelected() || rdoMesa.isSelected() || rdoDelivery.isSelected()) {

            if (linhaSelecionada > -1) {
                if (rdoBebida.isSelected()) {
                    bebida = bebidas.get(tblGenerica.getSelectedRow());
                    bebida.setQuantidade((int) spnQuantidade.getValue());
                    listaPedidos.add(bebida);
                } else {
                    pizza = pizzas.get(tblGenerica.getSelectedRow());
                    pizza.setQuantidade((int) spnQuantidade.getValue());
                    listaPedidos.add(pizza);
                }

                this.carregarTabelaItensPedidos();

            } else {
                String mensagem = "Nenhum item selecionado.";
                JOptionPane.showMessageDialog(this, mensagem, "Adicionar item",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            String mensagem = "Selecione o tipo do pedido.";
            JOptionPane.showMessageDialog(this, mensagem, "Tipo do pedido",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void carregarTabelaItensPedidos() {
        ModeloTabelaItensAdicionados modelo = new ModeloTabelaItensAdicionados();
        tblItensAdicionados.setModel(modelo);
    }

    private void pesquisarCliente() {

        cliente = new Cliente();
        ClienteBO clienteBO = new ClienteBO();
        try {
            clientes = clienteBO.pesquisar("NOME", txtTipoPedido.getText());
            ModeloTabelaCliente modelo = new ModeloTabelaCliente();
            tblGenerica.setModel(modelo);

        } catch (Exception e) {
            String mensagem = "Erro.\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Pesquisa cliente", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscarBebida() {
        bebida = new Bebida();
        BebidaBO bebidaBO = new BebidaBO();
        try {
            bebidas = bebidaBO.buscarTodas();
            ModeloTabelaBebida modelo = new ModeloTabelaBebida();
            tblGenerica.setModel(modelo);

        } catch (Exception e) {
            String mensagem = "Erro.\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Buscar Bebida", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscarPizza() {
        pizza = new Pizza();
        PizzaBO pizzaBO = new PizzaBO();
        try {
            pizzas = pizzaBO.buscarTodas();
            ModeloTabelaPizza modelo = new ModeloTabelaPizza();
            tblGenerica.setModel(modelo);

        } catch (Exception e) {
            String mensagem = "Erro.\n" + e.getMessage();
            JOptionPane.showMessageDialog(this, mensagem, "Buscar Pizza", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarPedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarPedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarPedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarPedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarPedidoForm().setVisible(true);
            }
        });
    }

    private void fecharCadastroCliente() {
        CadastrarPedidoForm.this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup grpAdicionarItem;
    private javax.swing.ButtonGroup grpTipoPedido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAcaoTipoPedido;
    private javax.swing.JLabel lblIr;
    private javax.swing.JLabel lblItensAdicionados;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblTipoItem;
    private javax.swing.JLabel lblTipoPedido;
    private javax.swing.JPanel pnlCadastroDePedido;
    private javax.swing.JRadioButton rdoBalcao;
    private javax.swing.JRadioButton rdoBebida;
    private javax.swing.JRadioButton rdoDelivery;
    private javax.swing.JRadioButton rdoMesa;
    private javax.swing.JRadioButton rdoPizza;
    private javax.swing.JSpinner spnQuantidade;
    private javax.swing.JTable tblGenerica;
    private javax.swing.JTable tblItensAdicionados;
    private javax.swing.JTextField txtTipoPedido;
    // End of variables declaration//GEN-END:variables

    private class ModeloTabelaCliente extends AbstractTableModel {

        public String getColumnName(int coluna) {
            if (coluna == 0) {
                return "NOME";
            } else if (coluna == 1) {
                return "SEXO";
            } else if (coluna == 2) {
                return "TEFONE";
            } else {
                return "ENDERE√áO";
            }
        }

        @Override
        public int getRowCount() {
            return clientes.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Cliente cliente = clientes.get(rowIndex);
            if (columnIndex == 0) {
                return cliente.getNome();
            } else if (columnIndex == 1) {
                return cliente.getSexo();
            } else if (columnIndex == 2) {
                return cliente.getTelefone();
            } else {
                return cliente.getEndereco();
            }
        }
    }

    private class ModeloTabelaBebida extends AbstractTableModel {

        @Override
        public String getColumnName(int coluna) {
            if (coluna == 0) {
                return "Marca";
            } else if (coluna == 1) {
                return "Sabor";
            } else if (coluna == 2) {
                return "Volume";
            } else {
                return "Pre√ßo";
            }
        }

        @Override
        public int getRowCount() {
            return bebidas.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Bebida bebida = bebidas.get(rowIndex);
            if (columnIndex == 0) {
                return bebida.getMarca();
            } else if (columnIndex == 1) {
                return bebida.getSabor();
            } else if (columnIndex == 2) {
                return bebida.getVolume();
            } else {
                return bebida.getPreco();
            }
        }

    }

    private class ModeloTabelaPizza extends AbstractTableModel {

        @Override
        public String getColumnName(int coluna) {
            if (coluna == 0) {
                return "NOME";
            } else if (coluna == 1) {
                return "INGREDIENTES";
            } else if (coluna == 2) {
                return "VALOR: P";
            } else if (coluna == 3) {
                return "VALOR: M";
            } else if (coluna == 4) {
                return "VALOR: G";
            } else {
                return "VALOR: GG";
            }
        }

        @Override
        public int getRowCount() {
            return pizzas.size();
        }

        @Override
        public int getColumnCount() {
            return 6;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Pizza pizza = pizzas.get(rowIndex);
            if (columnIndex == 0) {
                return pizza.getNome();
            } else if (columnIndex == 1) {
                return pizza.getIngredientes();
            } else if (columnIndex == 2) {
                return pizza.getPrecoPequena();
            } else if (columnIndex == 3) {
                return pizza.getPrecoMedia();
            } else if (columnIndex == 2) {
                return pizza.getPrecoGrande();
            } else {
                return pizza.getPrecoGigante();
            }
        }

    }

    private class ModeloTabelaItensAdicionados extends AbstractTableModel {

        @Override
        public String getColumnName(int coluna) {
            if (coluna == 0) {
                return "TIPO";
            } else if (coluna == 1) {
                return "DESCRI√á√ÉO";
            } else if (coluna == 2) {
                return "VALOR UNIT√ÅRIO";
            } else {
                return "QUANTIDADE";
            }
        }

        @Override
        public int getRowCount() {
            return listaPedidos.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {

            if (listaPedidos.get(rowIndex) instanceof Bebida) {
                bebida = (Bebida) listaPedidos.get(rowIndex);
                if (columnIndex == 0) {
                    return "Bebida";
                } else if (columnIndex == 1) {
                    return bebida.getMarca() + ", " + bebida.getSabor() + ", " + bebida.getVolume();
                } else if (columnIndex == 2) {
                    return bebida.getPreco();
                } else {
                    return bebida.getQuantidade();
                }
            } else {
                pizza = (Pizza) listaPedidos.get(rowIndex);
                if (columnIndex == 0) {
                    return "Pizza";
                } else if (columnIndex == 1) {
                    return pizza.getNome();
                } else if (columnIndex == 2) {
                    return pizza.getPrecoPequena();
                } else {
                    return pizza.getQuantidade();
                }
            }

        }   

    }
}
